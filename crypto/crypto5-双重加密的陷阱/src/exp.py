import gmpy2

e1 = 6317
e2 = 5099
n = 744150742014186407290761249143154288545377936038925576292699668172325812123095535538322023052662417000767370906723982905987698035103111516145478749037254929604031651060370921592070780896335483780373996176466137716428444119301528795316144681059441068553488504297207026244540584104420656543583806570181296108783381180296453507277267149969951295585087630406116166173391446935091694314377215980546106741375697686659996959862927247401178886616956317185499782335698936164787957873626472970000073855259628699784581448527637849679995616641740108531330121449679155539641299109783371767201055163877613354785398359933073498561

c1 = 420450206089280512075016020575617572354329401568917564670543322323960636936874747394037903817720601839610279594796596235297839944539529838045855472686346217452242159777232182178702427109945356109018353603073125585080826395444900227978180944866760536965029729936512031993146059502429309956407648251020099082658512043872596617228169426199221369747776212892735530284647724752023172157799916446125291315769717265801516240921511907029036905895488844355065648937151065870483814202484789022763568392111662575509444019170472129473273666317930155032905898766291156940494675170998932123275537508725990115087649966220241196694
c2 = 144963680450404691460346370938469886500755050531536679607541952413238084610196285065120817563639343980140575863690096442782981807468949878523883859536518503625611768426208781622627770876969267805257937421548804955657916807144467684856799985395083328890973891628431137971903019624669665159456369891937705076271327441557564561337274039287329194167613827275191607723637014255807277970586298407884990572395801116478878081835551482094174554404832314718439358577379918840030134641308768037813100905548845919874713739025365527023415598226689798793334803934728382845023147596657092110849430099871696908753005935902352383755

# 使用扩展欧几里得算法找到s1和s2，使得s1*e1 + s2*e2 = 1
_, s1, s2 = gmpy2.gcdext(e1, e2)

# 计算明文m = (c1^s1 * c2^s2) mod n
m = (gmpy2.powmod(c1, s1, n) * gmpy2.powmod(c2, s2, n)) % n

# 输出解密后的整数
print(m)
